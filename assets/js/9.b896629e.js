(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{349:function(t,s,a){"use strict";a.r(s);var r=a(33),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"this和对象原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this和对象原型"}},[t._v("#")]),t._v(" this和对象原型")]),t._v(" "),a("h2",{attrs:{id:"关于this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于this"}},[t._v("#")]),t._v(" 关于this")]),t._v(" "),a("p",[t._v("this实际上是在函数被调用时发生绑定，它指向什么完全取决于函数在哪里被调用")]),t._v(" "),a("p",[t._v("this在任何情况下都不指向函数的词法作用域。在javaScript内部，作用域确实和对象类似。可见的变量都是它的属性。但是作用域不是对象。这个作用域“对象”无法通过js代码范文，它只属于js引擎内部")]),t._v(" "),a("p",[t._v("当一个函数被调用时，会创建一个活动记录(执行上下文)。这个记录会包含函数在哪里被调用(调用栈)、函数的调用方式、传入的参数等信息而"),a("strong",[t._v("this")]),t._v("就是这个记录的一个属性")])])}),[],!1,null,null,null);s.default=e.exports}}]);