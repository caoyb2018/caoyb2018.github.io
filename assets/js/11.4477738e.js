(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{350:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),a("p",[t._v("把node与es6在一起 module.exports exports require import export经常分不清")]),t._v(" "),a("p",[t._v("这些模块化的语句放在一起感觉还是很乱的。有必要来梳理一下了")]),t._v(" "),a("h2",{attrs:{id:"node中的模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node中的模块化"}},[t._v("#")]),t._v(" node中的模块化")]),t._v(" "),a("p",[t._v("首先node中的模块化是module.exports exports require 这三个语句是在任何一个js文件中都能用的。然而module和exports都不是global下面的。那么为什么我们能在js文件中直接使用呢。")]),t._v(" "),a("p",[t._v("其实我们在node中运行代码时，node会自动给我们代码加一个外壳")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后我们的代码实际上都是运行在这个壳子里面的。这就解释了为什么这几个货不是global下面的成员，但我们依然可以在js文件中任何一个地方使用这几个货")]),t._v(" "),a("p",[t._v("我们如果直接打印module.exports的话 打印的结果是一个空对象。个人理解，在node中每个js文件都是一个模块。无论你在这个js文件中有没有使用过module.exports或exports，这个文件都会导出一个对象。")]),t._v(" "),a("p",[t._v("如果使用 "),a("strong",[t._v("module.export={}")]),t._v(" 或者 "),a("strong",[t._v("export.a=a")]),t._v(" 这种形式知道了一个导出的值的话，这个js文件导出的值就是指定的值。如果没有指定的话，这个js文件导出的就是一个空对象")]),t._v(" "),a("p",[t._v("在node中使用module.exprtts导出的语句")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tfn\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在node中每个js文件都有module.exports这个对象。而这个对象的值就是这个js文件需要导出的内容，正如上文所说的。如果我们没有给module.exports赋值的话。这个js文件默认导出的就是一个空对象")]),t._v(" "),a("p",[t._v("exports又是什么东西")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fn\n")])])]),a("p",[t._v("那么exports又是什么东西呢。如上文所说。我们在一个js文件导出模块的时候实际上就是在改变module.exports这个对象的值\n其实在每个js文件的第一行都有一个这样一句代码")]),t._v(" "),a("p",[a("strong",[t._v("exports=module.exports")])]),t._v(" "),a("p",[t._v("exports实际上就是module.exports的一个引用。可以通过exports.a=a这种形式来改变module.exports的值 而这样也可以解释了为什么我们不能通过这种样子来导出数据")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("exports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tfn\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果这样的话。我们实际上是改变了exports这个值的引用。它现在已经不指向module.exports这个对象了 而是指向了另一个对象，当然这样做也并没有改变module.exports的值 所以我们无法通过这样的形式来导出数据\n至于导入文件")]),t._v(" "),a("p",[a("strong",[t._v("const obj=require('./test1.js')")])]),t._v(" "),a("p",[t._v("此时obj就是被导入的文件中导出对象的值")]),t._v(" "),a("p",[a("strong",[t._v("{ a: 100, fn: [Function: fn] }")])]),t._v(" "),a("p",[t._v("就是这种，实际上也就是被导入文件中的moudle.exports的值")]),t._v(" "),a("h2",{attrs:{id:"es6中的模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6中的模块化"}},[t._v("#")]),t._v(" es6中的模块化")]),t._v(" "),a("p",[t._v("es6中的模块化主要是靠 "),a("strong",[t._v("export")]),t._v(" 和 "),a("strong",[t._v("import")]),t._v(" 来完成的")])])}),[],!1,null,null,null);s.default=e.exports}}]);